{
  "version": 3,
  "sources": ["src/environments/environment.ts", "src/app/features/lista-precios/services/list-precios.service.ts"],
  "sourcesContent": ["export const environment = {\r\n  production: false,\r\n  apiBaseUrl: 'http://localhost:3001/api' // o tu URL de desarrollo\r\n};", "import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable, catchError, throwError } from 'rxjs';\r\nimport { environment } from '../../../../environments/environment';\r\nimport {\r\n  PriceList,\r\n  PriceListItem,\r\n  PriceUpdate,\r\n  ValidationResult,\r\n  PriceUpdateRequest,\r\n  PriceUpdateResponse\r\n} from '../models/models-precios';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ListPreciosService {\r\n  private readonly apiUrl = `${environment.apiBaseUrl}/price-lists`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  validatePriceListData(data: any[]): Observable<ValidationResult> {\r\n    return this.http.post<ValidationResult>(`${this.apiUrl}/validate`, { data })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n  getHistoricoPrecios(): Observable<{ success: boolean; data: PriceListItem[]; validationId?: string; message?: string }> {\r\n    return this.http.get<{ success: boolean; data: PriceListItem[]; validationId?: string; message?: string }>(\r\n      `${this.apiUrl}/validate-products`\r\n    ).pipe(catchError(this.handleError));\r\n  }\r\n\r\n  guardarCambiosPrecios(data: any[]): Observable<ValidationResult> {\r\n    console.log(data);\r\n    \r\n    return this.http.post<ValidationResult>(`${this.apiUrl}/update-prices`, { data })\r\n      .pipe(catchError(this.handleError));\r\n  }\r\n\r\n\r\n  private handleError(error: HttpErrorResponse) {\r\n    let errorMessage = 'OcurriÃ³ un error desconocido';\r\n    if (error.error instanceof ErrorEvent) {\r\n      errorMessage = `Error: ${error.error.message}`;\r\n    } else {\r\n      errorMessage = error.error?.message || error.message;\r\n    }\r\n    console.error('Error en ListPreciosService:', error);\r\n    return throwError(() => new Error(errorMessage));\r\n  }\r\n}"],
  "mappings": ";;;;;;;;;;;;;AAAO,IAAM,cAAc;EACzB,YAAY;EACZ,YAAY;;;;;ACcR,IAAO,qBAAP,MAAO,oBAAkB;EAGT;EAFH,SAAS,GAAG,YAAY,UAAU;EAEnD,YAAoB,MAAgB;AAAhB,SAAA,OAAA;EAAoB;EAExC,sBAAsB,MAAW;AAC/B,WAAO,KAAK,KAAK,KAAuB,GAAG,KAAK,MAAM,aAAa,EAAE,KAAI,CAAE,EACxE,KAAK,WAAW,KAAK,WAAW,CAAC;EACtC;EAEA,sBAAmB;AACjB,WAAO,KAAK,KAAK,IACf,GAAG,KAAK,MAAM,oBAAoB,EAClC,KAAK,WAAW,KAAK,WAAW,CAAC;EACrC;EAEA,sBAAsB,MAAW;AAC/B,YAAQ,IAAI,IAAI;AAEhB,WAAO,KAAK,KAAK,KAAuB,GAAG,KAAK,MAAM,kBAAkB,EAAE,KAAI,CAAE,EAC7E,KAAK,WAAW,KAAK,WAAW,CAAC;EACtC;EAGQ,YAAY,OAAwB;AAC1C,QAAI,eAAe;AACnB,QAAI,MAAM,iBAAiB,YAAY;AACrC,qBAAe,UAAU,MAAM,MAAM,OAAO;IAC9C,OAAO;AACL,qBAAe,MAAM,OAAO,WAAW,MAAM;IAC/C;AACA,YAAQ,MAAM,gCAAgC,KAAK;AACnD,WAAO,WAAW,MAAM,IAAI,MAAM,YAAY,CAAC;EACjD;;qCAjCW,qBAAkB,mBAAA,UAAA,CAAA;EAAA;4EAAlB,qBAAkB,SAAlB,oBAAkB,WAAA,YAFjB,OAAM,CAAA;;;sEAEP,oBAAkB,CAAA;UAH9B;WAAW;MACV,YAAY;KACb;;;",
  "names": []
}
